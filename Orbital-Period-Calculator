Python 3.12.4 (tags/v3.12.4:8e8a4ba, Jun  6 2024, 19:30:16) [MSC v.1940 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import pandas as pd
>>> import matplotlib.pyplot as plt
>>> import math
>>> file_path = 'C:/Users/rosek/Desktop/Satellite Positioning.csv'
>>> df = pd.read_csv('C:/Users/rosek/Desktop/Satellite Positioning.csv')
>>> df['timedelta'] = pd.to_timedelta(df['timedelta'])
>>> print (df.head())
    period timedelta  gse_x_ace  gse_y_ace  gse_z_ace  gse_x_dscovr  gse_y_dscovr  gse_z_dscovr
0  train_a    0 days  1522376.9   143704.6   149496.7           NaN           NaN           NaN
1  train_a    1 days  1525410.9   136108.8   151034.1           NaN           NaN           NaN
2  train_a    2 days  1528484.9   128470.5   152387.7           NaN           NaN           NaN
3  train_a    3 days  1531570.3   120818.4   153561.4           NaN           NaN           NaN
4  train_a    4 days  1534633.1   113178.5   154534.6           NaN           NaN           NaN
>>> print (df.info())
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 5828 entries, 0 to 5827
Data columns (total 8 columns):
 #   Column        Non-Null Count  Dtype
---  ------        --------------  -----
 0   period        5828 non-null   object
 1   timedelta     5828 non-null   timedelta64[ns]
 2   gse_x_ace     5828 non-null   float64
 3   gse_y_ace     5828 non-null   float64
 4   gse_z_ace     5828 non-null   float64
 5   gse_x_dscovr  1034 non-null   float64
 6   gse_y_dscovr  1034 non-null   float64
 7   gse_z_dscovr  1034 non-null   float64
dtypes: float64(6), object(1), timedelta64[ns](1)
memory usage: 364.4+ KB
None
>>> print (df.describe())
                          timedelta     gse_x_ace      gse_y_ace  ...  gse_x_dscovr   gse_y_dscovr   gse_z_dscovr
count                          5828  5.828000e+03    5828.000000  ...  1.034000e+03    1034.000000    1034.000000
mean   1044 days 04:42:24.955387776  1.486706e+06   -1272.474434  ...  1.482431e+06   -9283.227273   -7295.925532
std     660 days 09:24:27.571305720  5.912011e+04  179299.306669  ...  6.060373e+04  184208.233451  126774.499201
min                 0 days 00:00:00  1.383933e+06 -266912.400000  ...  1.384073e+06 -272592.000000 -188233.000000
25%               485 days 00:00:00  1.434582e+06 -180032.850000  ...  1.422148e+06 -192547.500000 -135000.250000
50%               971 days 00:00:00  1.484264e+06   -1819.100000  ...  1.479391e+06   -8569.000000   -6330.000000
75%              1584 days 06:00:00  1.540133e+06  177058.475000  ...  1.535550e+06  172446.500000  120150.250000
max              2435 days 00:00:00  1.594075e+06  267057.600000  ...  1.594428e+06  259187.000000  172529.000000

[8 rows x 7 columns]
>>> print (df.isnull().sum())
period             0
timedelta          0
gse_x_ace          0
gse_y_ace          0
gse_z_ace          0
gse_x_dscovr    4794
gse_y_dscovr    4794
gse_z_dscovr    4794
dtype: int64
>>> plt.figure(figsize=(12, 6))
<Figure size 1200x600 with 0 Axes>
>>> plt.plot (df['timedelta'], df['gse_x_ace'], marker='o', linestyle='-', label='gse_x_ace')
[<matplotlib.lines.Line2D object at 0x0000014B97C8CEC0>]
>>> plt.xlabel ('Time Delta')
Text(0.5, 0, 'Time Delta')
>>> plt.ylabel ('gse_x_ace')
Text(0, 0.5, 'gse_x_ace')
>>> plt.title ('Satellite Position (gse_x_ace) over Time')
Text(0.5, 1.0, 'Satellite Position (gse_x_ace) over Time')
>>> plt.grid (True)
>>> plt.legend()
<matplotlib.legend.Legend object at 0x0000014B962BF890>
>>> plt.show()
>>> import math
>>> G = 6.67430e-11
>>> M_earth = 5.972e24
>>> semi_major_axis = 7000000.0
>>> def compute_orbit_parameters(semi_major_axis):
...     orbit_period = 2 * math.pi * math.sqrt(semi_major_axis**3 / (G * M_earth))
...     return orbit_period
...
>>> orbit_period = compute_orbit_parameters(semi_major_axis)
>>> print(f"Orbital period: {orbit_period} seconds")
Orbital period: 5828.598860022618 seconds
